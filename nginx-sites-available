

## Copy the contents of this file into: /etc/nginx/sites-available/default

## 
# Get certificate:
# sudo apt-get install certbot python-certbot-nginx
# sudo certbot --nginx
##

##
# sudo /etc/init.d/nginx restart
# sudo nginx -t
##

##
# Remember if configuring SSL for https: port-forward ports 80 & 443
##

## TODO Setup PM2 process manager to keep app running: https://gist.github.com/bradtraversy/cd90d1ed3c462fe3bddd11bf8953a896

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {

	# SSL configuration:
	#
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
	ssl on;

	root /home/pi/repos/eSantini/build;

	index index.html;

	server_name esantini.com www.esantini.com;

    # URI routing
    location /api/weather {
        limit_except GET {
            deny all; 
        }
        error_page 403 = @405; # Convert deny response from 403 (Forbidden) to 405 (Method Not Allowed)
        proxy_pass http://localhost:3001/api/weather;
    }

	location / {
		try_files $uri /index.html;
	}

	location /static {
		autoindex on;
	}

    ssl_certificate /etc/letsencrypt/live/esantini.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/esantini.com/privkey.pem; # managed by Certbot

}

server {
    if ($host = www.esantini.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = esantini.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;
	listen [::]:80 default_server;

	server_name esantini.com www.esantini.com;
    return 404; # managed by Certbot

}
